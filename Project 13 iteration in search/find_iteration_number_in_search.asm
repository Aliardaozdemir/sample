	  ORG 0100H

ARRAYSIZE  EQU 50
COUNTSIZE  EQU 2
COUNTSTR   DB COUNTSIZE DUP (?)
ANARRAY	   DW ARRAYSIZE DUP (?),'$'
ANARRAYPTR DW OFFSET ANARRAY

SEARCH	  DW 0
COUNT	  DW 0
MIDPOINT  DW 0
HIGHBOUND DW 0
LOWBOUND  DW 0

ENDL	  DB 10,13,'$'
MSG1      DB 'ENTER SEARCH KEY: $'
MSG2      DB 'WITH LINEAR SEARCH NUM. OF ITERATION: $'
MSG3      DB 'WITH BINARY SEARCH NUM. OF ITERATION: $'
MSG4	  DB '$'
MSG5	  DB '$'

BUFFSIZE EQU 3
KEYBUFF  LABEL BYTE
MAXLEN   DB BUFFSIZE
STRLEN   DB ?
INBUFF   DB BUFFSIZE DUP(' ')

	ORG 0500
CRLF MACRO N
LOCAL STRINGLOOP
	  MOV DX,OFFSET ENDL
	  AH,9
	  MOV CX,N
STRINGLOOP:
	  INT 21H
	  LOOP STRINGLOOP
ENDM

MAIN PROC
	  MOV AX,@DATA
	  MOV DS,AX
	  CALL FILLARRAY
SETBOUNDS: 
	  ADD LOWBOUND,0
	  ADD HIGHBOUND,ARRAYSIZE-1
	  CALL SETMIDPOINT
DISPLAY:
	  LEA DX,MSG1
	  MOV AH,09H
	  INT 21H
FILLBUFFER:
	  MOV AH,0AH
	  LEA DX,KEYBUFF
APPENDDOLLAR:
	  MOV SI,BUFFSIZE-2
	  MOV BUYTE PTR INBUFF[SI],$
BUFFERTOHEX:
	  MOV SI,BUFFSIZE-2
	  MOV BX,1
	  MOV CX,10
NEXTVALUE:
	  MOV AX,0
	  MOV AL,BYTE PTR INBUFF[SI]
	  SUB AX,0
	  MUL BX
	  ADD SEARCH,AX
	  MOV AX,BX
	  MUL CX
	  MOV BX,AX
	  DEC SI
	  CMP BX,100
	  JNE NEXTVALUE
COMPAREVAL:
	  IN COUNT
	  MOV AX,[SEARCH]
	  MOV SI[MIDPOINT]
	  SHL SI,1
	  MOV BX,[ARRAY+SI]
	  CMP AX,BX
	  JG UPDATELOWBOUND
	  JL UPDATEHIGHBOUND
	  JE VALUEFOUND
UPDATELOWBOUND:
	  MOV BX,[MIDPOINT]
	  ADD BX,1
	  MOV LOWBOUND,BX
	  CALL,SETMIDPOINT
	  JMP COMPAREVAL
UPDATEHIGHBOUND:
	  MOV BX,[MIDPOINT]
	  SUB BX,1
	  MOV HIGHBOUND,BX
	  CALL SETMIDPOINT
	  JMP COMPAREVAL
VALUEFOUND:
	  CRLF 2
	  LEA DX,MSG3
	  MOV AH,09H
	  INT 21H

	  PUSH COUNT
	  PUSH OFFSET COUNTSTR
	  PUSH COUNTSIZE
	  CALL PUTDEC

	  LEA DX,COUNTSTR
	  MOV AH,09H
	  INT 21H

	  LEA DX,MSG1
	  INT 21H
	  LEA DX,INBUFF
	  INT 21H
	  LEA DX,MSG2
	  INT 21H
MAIN ENDP

FILLARRAY PROC
	  MOV AX,1
	  MOV SI,0
	  MOV BX,ANARRAY
FILLLOOP:
	  MOV WORD PTR BX[SI],AX
	  CMP WORD PTR BX[SI+2],'$'
	  JE DONE
	  INC AX
	  ADD SI,2
	  JMP FILLLOOP
DONE:
	RET

FILLARRAY ENDP

SETMIDPOINT PROC
	  MOV AX,HIGHBOUND
	  MOV BX,LOWBOUND
	  ADD AX,BX
	  SHR AX,1
	  MOV MIDPOINT,AX
	  RET
SETMIDPOINT ENDP

PUTDEC PROC

ARG ARRSIZE:WORD,ARRAYOFFSET:WORD,INPUTVALUE:WORD = @@BYTEUSED

	  PUSH BP
	  MOV BP,SP
	  MOV AX,INPUTVALUE
CONVERTTODEC:
	  MOV CX,ARRSIZE
	  MOV SI,CX
	  DEC SI
DIVISIONLOOP:
	  MOV BX,10
	  MOV DX,0
	  DIV BX
	  ADD DL,'0'
	  MOV BX,ARRAYOFFSET
	  MOV BX[SI],DL
	  DEC SI
	  LOOP DIVISIONLOOP

	  POP BP
	  RET @@BYTEUSED
PUTDEC ENDP
END MAIN





